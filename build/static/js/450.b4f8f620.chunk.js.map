{
  "version": 3,
  "file": "static/js/450.b4f8f620.chunk.js",
  "mappings": "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",
  "sources": [
    "pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Cast/Cast.styled.js",
    "pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Cast/Cast.jsx",
    "pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Reviews/Reviews.styled.jsx",
    "pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Reviews/Reviews.jsx",
    "pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoInTabs.jsx",
    "pages/MovieDetails/AdditionalInfo/AdditionalInfo.styled.js",
    "pages/MovieDetails/AdditionalInfo/AdditionalInfo.jsx",
    "pages/MovieDetails/GoBackLink/GoBackLink.styled.js",
    "pages/MovieDetails/GoBackLink/GoBackLink.jsx",
    "pages/MovieDetails/FilmImage/FilmImage.styled.js",
    "pages/MovieDetails/FilmImage/FilmImage.jsx",
    "pages/MovieDetails/MovieDetailsCard/MovieDetailsCard.styled.js",
    "pages/MovieDetails/MovieDetailsCard/MovieDetailsCard.jsx",
    "pages/MovieDetails/MovieDetails.jsx",
    "services/getMovies.js",
    "utils/constants.js"
  ],
  "sourcesContent": [
    "import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\nexport const ListItem = styled.li`\n  min-width: 182px;\n  font-size: 14px;\n  padding: 6px;\n  max-width: min-content;\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  img {\n    max-width: 182px;\n    border-radius: 8px;\n  }\n  span {\n    color: #ffc700;\n  }\n`;\n",
    "import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from 'services/getMovies';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\nimport { ListItem, StyledList } from './Cast.module';\n\nconst Cast = () => {\n  // const location = useLocation();\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <StyledList>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <ListItem key={id}>\n              <img\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </ListItem>\n          ))}\n        </StyledList>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  margin-top: 12px;\n`;\nexport const ListItem = styled.li`\n  font-size: 14px;\n  padding: 6px;\n  background-color: #2a2a2a;\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  span {\n    color: #ffc700;\n  }\n`;\nexport const ReviewsDescr = styled.p`\n  color: #888888;\n  margin-top: 6px;\n`;\n",
    "import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsMovie } from 'services/getMovies';\nimport { ListItem, StyledList, ReviewsDescr } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const Reviews = await getReviewsMovie(movieId);\n        setReviews(Reviews);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return reviews.length === 0 ? (\n    <h3>No Reviews.!!!!!!</h3>\n  ) : (\n    <StyledList>\n      {reviews.map(({ id, author, content }) => (\n        <ListItem key={id}>\n          <p>\n            <span>Author:</span> {author}\n          </p>\n          <ReviewsDescr>{content}</ReviewsDescr>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default Reviews;\n\n///\n///\n///\n///\n///\n",
    "import * as React from 'react';\nimport Box from '@mui/material/Box';\n// import Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Cast from 'pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Cast/Cast';\nimport Reviews from 'pages/MovieDetails/AdditionalInfo/AdditionalFilmInfoInTabs/AdditionalFilmInfoComponents/Reviews/Reviews';\n// import { StyledMuiTab } from './AdditionalFilmInfoInTabs.module';\nimport { Tab } from '@mui/material';\n\nexport default function AdditionalFilmInfoInTabs() {\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          {/* <TabList onChange={handleChange} aria-label=\"lab API tabs example\"> */}\n          <TabList\n            onChange={handleChange}\n            aria-label=\"lab API tabs example\"\n            TabIndicatorProps={{\n              sx: { backgroundColor: '#ffc700' },\n            }}\n            sx={{\n              '& .MuiTab-root': {\n                color: '#fff',\n                transition: 'font-size 0.3s ease',\n                '&.Mui-selected': {\n                  color: '#ffc700',\n                },\n                '&:hover': {\n                  color: '#ffc700',\n                },\n              },\n            }}\n          >\n            <Tab label=\"Cast\" value=\"1\" />\n            <Tab label=\"Reviews\" value=\"2\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n          <Cast />\n        </TabPanel>\n        <TabPanel value=\"2\">\n          <Reviews />\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\nexport const AdditionalInfoContainer = styled.div`\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: 20px;\n  border-radius: 10px;\n`;\n",
    "import AdditionalFilmInfoInTabs from './AdditionalFilmInfoInTabs/AdditionalFilmInfoInTabs';\nimport { AdditionalInfoContainer } from './AdditionalInfo.module';\n\nexport const AdditionalInfo = () => {\n  return (\n    <AdditionalInfoContainer>\n      <h2>Additional information</h2>\n      <AdditionalFilmInfoInTabs></AdditionalFilmInfoInTabs>\n    </AdditionalInfoContainer>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\n\nexport const GoBackLinkSpan = styled.span`\n  a {\n    position: relative;\n    padding-left: 12px;\n    text-decoration: none;\n    color: #fff;\n  }\n\n  a::before {\n    content: '';\n    display: block;\n\n    border-color: #ffc700;\n    border-style: solid;\n    border-width: 0 0 2px 2px;\n    height: 6px;\n    left: 0;\n    position: absolute;\n    width: 6px;\n    margin-top: -4px;\n    top: 50%;\n\n    transform: rotate(45deg);\n    -webkit-transform: rotate(45deg);\n  }\n\n  :hover,\n  :focus {\n    color: #ffc700;\n    a::before {\n      border-color: white;\n    }\n    span {\n      color: white;\n    }\n  }\n`;\n",
    "import { Link } from 'react-router-dom';\nimport { GoBackLinkSpan } from './GoBackLink.module';\n\nexport const GoBackLink = ({ backLinkHref }) => {\n  return (\n    <GoBackLinkSpan>\n      <Link to={backLinkHref}>Go back</Link>\n    </GoBackLinkSpan>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\n\nexport const FilmImageWrapper = styled.div`\n  height: 273px;\n  width: 182px;\n`;\n\nexport const FilmImg = styled.img`\n  max-width: 182px;\n  background: #424242;\n  border-radius: 15px;\n`;\n",
    "import { Loader } from 'components/Loader/Loader';\nimport { FilmImageWrapper, FilmImg } from './FilmImage.module';\nimport { useState } from 'react';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\n\nexport const FilmImage = ({ movie }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const handleImageLoad = () => {\n    setIsLoading(false);\n  };\n  return (\n    <FilmImageWrapper>\n      {isLoading && <Loader />}\n      <FilmImg\n        src={`${\n          movie.poster_path\n            ? BASE_POSTER_URL + movie.poster_path\n            : PLACEHOLDER + '?text=' + movie.original_title\n        }`}\n        alt=\"get\"\n        onLoad={handleImageLoad}\n        style={{ display: isLoading ? 'none' : 'block' }}\n      />\n    </FilmImageWrapper>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\nexport const FilmWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 26px;\n  margin-bottom: 12px;\n`;\n\nexport const FilmSubTitle = styled.h3`\n  font-size: 26px;\n  margin-bottom: 6px;\n`;\n\nexport const FilmDescr = styled.p`\n  font-size: 24px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\n\nexport const StyledListDescr = styled.ul`\n  font-size: 22px;\n  display: flex;\n  gap: 18px;\n  padding: 0;\n  border-radius: 20px;\n  color: #888888;\n  margin-bottom: 12px;\n`;\n",
    "import { FilmImage } from '../FilmImage/FilmImage';\nimport {\n  FilmWrapper,\n  FilmTitle,\n  FilmDescr,\n  FilmSubTitle,\n  StyledListDescr,\n} from './MovieDetailsCard.module';\n\nexport const MovieDetailsCard = ({ movie }) => {\n  return (\n    <FilmWrapper>\n      <FilmImage movie={movie} />\n\n      <div>\n        <FilmTitle>{movie.original_title}</FilmTitle>\n        <FilmSubTitle>Rating: {Math.round(movie.vote_average)}</FilmSubTitle>\n        <FilmSubTitle>Overview</FilmSubTitle>\n        <FilmDescr>{movie.overview}</FilmDescr>\n        <FilmSubTitle>Genres</FilmSubTitle>\n        <StyledListDescr>\n          {movie.genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </StyledListDescr>\n      </div>\n    </FilmWrapper>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/getMovies';\n\nimport { AdditionalInfo } from './AdditionalInfo/AdditionalInfo';\nimport { GoBackLink } from './GoBackLink/GoBackLink';\nimport { MovieDetailsCard } from './MovieDetailsCard/MovieDetailsCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovie(movieById);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink backLinkHref={backLinkHref} />\n      <MovieDetailsCard movie={movie}></MovieDetailsCard>\n\n      <AdditionalInfo></AdditionalInfo>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n///\n///\n///\n///\n///\n",
    "import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n  }\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n    );\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by query:', error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n  }\n};\n\nexport const getCastMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast movies:', error);\n  }\n};\nexport const getReviewsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movie:', error);\n  }\n};\n\n///\n///\n///\n//\n",
    "export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\n///\n//\n//\n"
  ],
  "names": [
    "StyledList",
    "styled",
    "ListItem",
    "movieId",
    "useParams",
    "useState",
    "cast",
    "setCast",
    "useEffect",
    "fetchCast",
    "getCastMovie",
    "console",
    "log",
    "map",
    "id",
    "profile_path",
    "original_name",
    "character",
    "src",
    "BASE_POSTER_URL",
    "PLACEHOLDER",
    "alt",
    "ReviewsDescr",
    "reviews",
    "setReviews",
    "fetchReviews",
    "getReviewsMovie",
    "Reviews",
    "length",
    "author",
    "content",
    "AdditionalFilmInfoInTabs",
    "React",
    "value",
    "setValue",
    "Box",
    "sx",
    "width",
    "typography",
    "TabContext",
    "borderBottom",
    "borderColor",
    "TabList",
    "onChange",
    "event",
    "newValue",
    "TabIndicatorProps",
    "backgroundColor",
    "color",
    "transition",
    "Tab",
    "label",
    "TabPanel",
    "AdditionalInfoContainer",
    "AdditionalInfo",
    "GoBackLinkSpan",
    "GoBackLink",
    "backLinkHref",
    "to",
    "FilmImageWrapper",
    "FilmImg",
    "FilmImage",
    "movie",
    "isLoading",
    "setIsLoading",
    "Loader",
    "poster_path",
    "original_title",
    "onLoad",
    "style",
    "display",
    "FilmWrapper",
    "FilmTitle",
    "FilmSubTitle",
    "FilmDescr",
    "StyledListDescr",
    "MovieDetailsCard",
    "Math",
    "round",
    "vote_average",
    "overview",
    "genres",
    "genre",
    "name",
    "setMovie",
    "useLocation",
    "state",
    "from",
    "fetchMovieById",
    "getMovieById",
    "movieById",
    "axios",
    "API_KEY",
    "getTrendingMovies",
    "data",
    "results",
    "error",
    "getMovieByQuery",
    "query",
    "page"
  ],
  "sourceRoot": ""
}
