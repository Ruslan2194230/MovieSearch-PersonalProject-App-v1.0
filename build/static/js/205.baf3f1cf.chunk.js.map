{
  "version": 3,
  "file": "static/js/205.baf3f1cf.chunk.js",
  "mappings": "mPAEaA,EAAYC,EAAAA,EAAAA,GAAH,soD,oBCATC,EAAYD,EAAAA,EAAAA,GAAH,otBAaTE,EAAcF,EAAAA,EAAAA,IAAH,45BAQXG,EAAYH,EAAAA,EAAAA,GAAH,gE,oBCtBTI,EAAeJ,EAAAA,EAAAA,IAAH,+CAGZK,EAAiBL,EAAAA,EAAAA,OAAH,kUAqBdM,EAAeN,EAAAA,EAAAA,KAAH,8G,mBCrBZO,EAAsB,SAAC,GAAY,IAAVC,EAAS,EAATA,GACpC,GACEC,EAAAA,EAAAA,KADMC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,wBAAyBC,EAA7C,EAA6CA,6BAE7C,GAA0BC,EAAAA,EAAAA,UAASH,EAAWF,IAA9C,eAAOM,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAASL,EAAWF,GACrB,GAAE,CAACA,EAAIE,IAaR,OACE,SAACL,EAAD,CACEY,QAbwB,SAAAC,GAC1BA,EAAEC,kBACFD,EAAEE,iBACEN,EACFF,EAA6BJ,GAE7BG,EAAwBH,GAE1BO,GAAUD,EACX,EAKGO,UAAWP,EAAQ,WAAa,GAFlC,UAIE,SAACR,EAAD,WACE,gBAAKgB,QAAQ,YAAb,UACE,iBACEC,EAAE,+LACFF,UAAU,eAMrB,EC4BD,EAtDiB,SAAC,GAAyB,IAAvBG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjBjB,EAAoCgB,EAApChB,GAAIkB,EAAgCF,EAAhCE,eAAgBC,EAAgBH,EAAhBG,YAoB5B,OACE,UAAC1B,EAAD,YACE,SAAC,KAAD,CAAM2B,MAAO,CAAEC,KAAMJ,GAAYK,GAAE,kBAAatB,GAAhD,UACE,UAACJ,EAAD,YACE,SAACF,EAAD,CACE6B,IACEJ,EACIK,EAAAA,EAAkBL,EAClBM,EAAAA,EAAc,SAAWP,EAE/BQ,IAAKR,KAEP,SAACnB,EAAD,CAAqBC,GAAIA,UAgB7B,SAACL,EAAD,UAAYuB,MA3BElB,EA8BnB,EC5CD,EAjBkB,SAAC,GAAkC,IAAhC2B,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,iBACrBX,GAAWY,EAAAA,EAAAA,MAEjB,OACE,SAACtC,EAAD,UACGoC,EAAOG,KAAI,SAAAd,GAAK,OACf,SAAC,EAAD,CAEEA,MAAOA,EACPC,SAAUA,EACVW,iBAAkBA,GAHbZ,EAAMhB,GAFE,KAUtB,C,qMCjBY+B,EAASvC,EAAAA,EAAAA,OAAH,s0BA2CNwC,EAAOxC,EAAAA,EAAAA,IAAH,iQACC,SAAAyC,GAAK,MAAuB,SAAlBA,EAAMC,QAAqB,IAAM,MAAtC,IACN,SAAAD,GAAK,MAAuB,SAAlBA,EAAMC,QAAqB,OAAS,GAAzC,IAMF,SAAAD,GAAK,MAAuB,SAAlBA,EAAMC,QAAqB,IAAM,KAAtC,IACN,SAAAD,GAAK,MAAuB,SAAlBA,EAAMC,QAAqB,MAAQ,GAAxC,I,SClDlBC,EAAU,CACdC,W,iyBACAC,Y,0xBAGWC,EAAY,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOL,EAAuC,EAAvCA,QAASzB,EAA8B,EAA9BA,QAAS+B,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC7D,OACE,UAACV,EAAD,CAAQtB,QAASA,EAAS+B,SAAUA,EAApC,UACGN,GAAWK,GACZ,SAACP,EAAD,CAAMT,IAAKY,EAAQM,GAAOf,IAAKa,EAAOL,QAASA,KAC7CA,GAAWK,IAGlB,ECfYG,EAA0BlD,EAAAA,EAAAA,IAAH,0EAKvBmD,EAAqBnD,EAAAA,EAAAA,IAAH,+rBCDlBoD,EAAiB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WACvD,OACE,UAACL,EAAD,YACE,SAACJ,EAAD,CACEE,SAAmB,IAATK,EACVN,MAAM,YACNE,KAAK,aACLhC,QAAS,kBAAMqC,EAAiBD,EAAO,EAA9B,KAEX,SAACF,EAAD,UAAqBE,KACrB,SAACP,EAAD,CACEE,SAAUO,IAAeF,EACzBN,MAAM,YACNE,KAAK,cACLP,QAAQ,OACRzB,QAAS,kBAAMqC,EAAiBD,EAAO,EAA9B,MAIhB,ECkDD,EAlEe,WACb,OAA4BxC,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeqB,EAAf,KACA,GAA8C3C,EAAAA,EAAAA,UAAS,GAAvD,eAAO4C,EAAP,KAAwBC,EAAxB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4CC,EAAAA,EAAAA,KAApCC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,eAE1BhD,EAAAA,EAAAA,YAAU,WACR,IAAMiD,EAAeL,EAAaM,IAAI,SAChCC,EAAcP,EAAaM,IAAI,SAAW,IAEhD,GAAKD,EAAL,CAIKL,EAAaQ,IAAI,SACpBP,EAAgB,CAAEQ,MAAOJ,EAAcZ,KAAMc,IAG/C,IAAMG,EAAiB,mCAAG,kHAEcC,EAAAA,EAAAA,IAClCN,EACAE,GAJoB,UAEhBK,EAFgB,OAMdC,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,YACK,IAD0BF,EAAlBG,cANR,uBAQpBX,EAAc,mRARM,0BAWtBN,EAAmBgB,GACnBlB,EAAUiB,GAZY,kDActBV,EAAiB,6CAdK,0DAAH,qDAkBvBO,GAxBC,CAyBF,GAAE,CAACV,EAAcC,EAAiBG,EAAeD,IAElD,IAAMT,GAAmBsB,EAAAA,EAAAA,cACvB,SAAAC,GACEhB,GAAgB,SAAAiB,GAAU,yBACrBC,OAAOC,YAAYF,IADE,IAExBzB,KAAMwB,EAAQI,YAFU,GAI3B,GACD,CAACpB,IAGH,OACE,iCACE,SAAC,KAAD,CAAMA,gBAAiBA,IACtB1B,EAAO+C,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWhD,OAAQA,IACxCA,EAAO+C,OAAS,IACf,SAAC9B,EAAD,CACEjB,OAAQA,EACRkB,KAAM+B,OAAOxB,EAAaM,IAAI,UAAY,EAC1CX,WAAYE,EACZH,iBAAkBA,MAK3B,C,mMCvED+B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,+GAENF,EAAAA,EAAAA,IAAA,sCAAyCC,IAFnC,uBAErBE,EAFqB,EAErBA,KAFqB,kBAItBA,EAAKf,SAJiB,gCAM7BgB,QAAQC,MAAM,kCAAd,MAN6B,yDAAH,qDAUjBnB,EAAe,mCAAG,WAAOF,EAAOhB,GAAd,kGAEJgC,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBjB,EADpB,gCACiDhB,EADjD,yBAFI,uBAEnBmC,EAFmB,EAEnBA,KAFmB,kBAMpBA,GANoB,gCAQ3BC,QAAQC,MAAM,iCAAd,MAR2B,yDAAH,wDAYfC,EAAY,mCAAG,WAAMC,GAAN,kGAEDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBAFC,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBC,QAAQC,MAAM,8BAAd,MARwB,yDAAH,sDAYZG,EAAY,mCAAG,WAAMD,GAAN,kGAEDP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBAFC,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAMjBA,EAAKM,MANY,gCAQxBL,QAAQC,MAAM,8BAAd,MARwB,yDAAH,sDAWZK,EAAe,mCAAG,WAAMH,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBAFI,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAMpBA,EAAKf,SANe,gCAQ3BgB,QAAQC,MAAM,gCAAd,MAR2B,yDAAH,qD,8EClDrB,IAAM1D,EAAkB,mCAClBC,EAAc,qC",
  "sources": [
    "components/FilmsList/FilmsList.styled.js",
    "components/MovieItem/MovieItem.styled.js",
    "components/Buttons/AddToFavoriteButton/AddToFavoriteButton.styled.js",
    "components/Buttons/AddToFavoriteButton/AddToFavoriteButton.jsx",
    "components/MovieItem/MovieItem.jsx",
    "components/FilmsList/FilmsList.jsx",
    "components/Buttons/PageNavButtons/NavButton/NavButton.styled.js",
    "components/Buttons/PageNavButtons/NavButton/NavButton.jsx",
    "components/Buttons/PageNavButtons/PageNavButtons.styled.js",
    "components/Buttons/PageNavButtons/PageNavButtons.jsx",
    "pages/Movies/Movies.jsx",
    "services/getMovies.js",
    "utils/constants.js"
  ],
  "sourcesContent": [
    "import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  padding: 16px 0;\n  list-style: none;\n  margin: 0 auto;\n  max-width: calc(100vw - 32px); /* Учитываем отступы */\n\n  @media (max-width: 1440px) {\n    /* Показывать по 4 фильма в строку на компах */\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  // @media (max-width: 992px) {\n  //   /* Показывать по 2 фильма в строку на мобильных устройствах */\n  //   grid-template-columns: repeat(2, 1fr);\n  // }\n\n  @media (max-width: 1000px) {\n    /* Показывать по 2 фильма в строку на планшетах */\n    grid-template-columns: repeat(2, minmax(0, 350px));\n  }\n  @media (max-width: 425px) {\n    /* Показывать по 2 фильма в строку на планшетах */\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n",
    "import styled from '@emotion/styled';\n\nexport const ItemFilms = styled.li`\n  position: relative;\n  overflow: hidden;\n  max-width: 100%; /* Занимает максимально возможную ширину */\n\n  height: auto; /* Высота автоматически подстраивается под содержимое */\n\n  padding: 12px;\n  border-radius: 12px;\n  border: 1px solid #ddd;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const FilmListimg = styled.img`\n  width: 100%; /* Занимает всю доступную ширину контейнера */\n  height: auto; /* Подстраивается под соотношение сторон изображения */\n  object-fit: cover; /* Заполняет контейнер, сохраняя соотношение сторон */\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n`;\n\nexport const FilmTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 8px;\n`;\n",
    "import styled from '@emotion/styled';\nexport const ImgContainer = styled.div`\n  position: relative;\n`;\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  bottom: -30px;\n  right: 0;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin-top: 10px;\n\n  &.favorite svg path {\n    fill: #ffc700;\n    stroke: #ffc700;\n  }\n\n  &:not(.favorite) svg path {\n    fill: green;\n    stroke: green;\n  }\n`;\n\nexport const FavoriteIcon = styled.span`\n  width: 24px;\n  height: 24px;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n",
    "import { useFavorites } from 'Contexts/FavoriteContext';\nimport { FavoriteButton, FavoriteIcon } from './AddToFavoriteButton.module';\nimport { useEffect, useState } from 'react';\n\nexport const AddToFavoriteButton = ({ id }) => {\n  const { isFavorite, addToFavoritesAndUpdate, removeFromFavoritesAndUpdate } =\n    useFavorites();\n  const [isFav, setIsFav] = useState(isFavorite(id));\n\n  useEffect(() => {\n    setIsFav(isFavorite(id));\n  }, [id, isFavorite]);\n\n  const handleFavoriteClick = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    if (isFav) {\n      removeFromFavoritesAndUpdate(id);\n    } else {\n      addToFavoritesAndUpdate(id);\n    }\n    setIsFav(!isFav);\n  };\n\n  return (\n    <FavoriteButton\n      onClick={handleFavoriteClick}\n      className={isFav ? 'favorite' : ''}\n    >\n      <FavoriteIcon>\n        <svg viewBox=\"0 0 32 32\">\n          <path\n            d=\"M26,2H6A1,1,0,0,0,5,3V28a1,1,0,0,0,1.51.86L16,23.17l9.49,5.69A1,1,0,0,0,26,29a1,1,0,0,0,.49-.13A1,1,0,0,0,27,28V3A1,1,0,0,0,26,2ZM25,4V8H7V4ZM16.51,21.14a1,1,0,0,0-1,0L7,26.23V10H25V26.23Z\"\n            className=\"cls-1\"\n          />\n        </svg>\n      </FavoriteIcon>\n    </FavoriteButton>\n  );\n};\n",
    "import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ItemFilms, FilmListimg, FilmTitle } from './MovieItem.module';\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\n\nimport { useFavorites } from '../../Contexts/FavoriteContext';\nimport {\n  FavoriteButton,\n  FavoriteIcon,\n  ImgContainer,\n} from '../Buttons/AddToFavoriteButton/AddToFavoriteButton.module';\nimport { AddToFavoriteButton } from 'components/Buttons/AddToFavoriteButton/AddToFavoriteButton';\n\nconst MovieItem = ({ movie, location }) => {\n  const { id, original_title, poster_path } = movie;\n  // const { isFavorite, addToFavoritesAndUpdate, removeFromFavoritesAndUpdate } =\n  //   useFavorites();\n  // const [isFav, setIsFav] = useState(isFavorite(id));\n\n  // useEffect(() => {\n  //   setIsFav(isFavorite(id));\n  // }, [id, isFavorite]);\n\n  // const handleFavoriteClick = e => {\n  //   e.stopPropagation();\n  //   e.preventDefault();\n  //   if (isFav) {\n  //     removeFromFavoritesAndUpdate(id);\n  //   } else {\n  //     addToFavoritesAndUpdate(id);\n  //   }\n  //   setIsFav(!isFav);\n  // };\n\n  return (\n    <ItemFilms key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <ImgContainer>\n          <FilmListimg\n            src={\n              poster_path\n                ? BASE_POSTER_URL + poster_path\n                : PLACEHOLDER + '?text=' + original_title\n            }\n            alt={original_title}\n          />\n          <AddToFavoriteButton id={id} />\n          {/* <FavoriteButton\n            onClick={handleFavoriteClick}\n            className={isFav ? 'favorite' : ''}\n          >\n            <FavoriteIcon>\n              <svg viewBox=\"0 0 32 32\">\n                <path\n                  d=\"M26,2H6A1,1,0,0,0,5,3V28a1,1,0,0,0,1.51.86L16,23.17l9.49,5.69A1,1,0,0,0,26,29a1,1,0,0,0,.49-.13A1,1,0,0,0,27,28V3A1,1,0,0,0,26,2ZM25,4V8H7V4ZM16.51,21.14a1,1,0,0,0-1,0L7,26.23V10H25V26.23Z\"\n                  className=\"cls-1\"\n                />\n              </svg>\n            </FavoriteIcon>\n          </FavoriteButton> */}\n        </ImgContainer>\n      </Link>\n      <FilmTitle>{original_title}</FilmTitle>\n    </ItemFilms>\n  );\n};\n\nexport default MovieItem;\n\n///\n///\n///\n///\n///\n",
    "import { useLocation } from 'react-router-dom';\nimport { ListFilms } from './FilmsList.module';\n\nimport MovieItem from '../MovieItem/MovieItem';\nconst FilmsList = ({ movies, onRemoveFavorite }) => {\n  const location = useLocation();\n\n  return (\n    <ListFilms>\n      {movies.map(movie => (\n        <MovieItem\n          key={movie.id}\n          movie={movie}\n          location={location}\n          onRemoveFavorite={onRemoveFavorite}\n        />\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmsList;\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px 15px;\n  border: 1px solid #2b86c5;\n  border-radius: 5px;\n  background-color: #ff3cac;\n  background-image: linear-gradient(\n    225deg,\n    #ffc700 0%,\n    #ff7f50 50%,\n    #ff3cac 100%\n  );\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  margin: 15px 20px 15px 0;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-decoration: none;\n  letter-spacing: 1px;\n  opacity: 0.8;\n  min-width: 120px;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.4;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n    padding: 5px;\n    margin: 10px 10px 10px 0;\n    min-width: 100px;\n  }\n`;\nexport const Icon = styled.img`\n  margin-right: ${props => (props.reverse === 'true' ? '0' : '10px')};\n  margin-left: ${props => (props.reverse === 'true' ? '10px' : '0')};\n  width: 25px;\n  height: 25px;\n  filter: grayscale(1) invert(1);\n\n  @media (max-width: 768px) {\n    margin-right: ${props => (props.reverse === 'true' ? '0' : '7px')};\n    margin-left: ${props => (props.reverse === 'true' ? '7px' : '0')};\n    width: 20px;\n    height: 20px;\n  }\n`;\n",
    "import { Icon, Button } from './NavButton.module';\nimport left_arrow from '../../../../images/left_arrow.png';\nimport right_arrow from '../../../../images/right_arrow.png';\n\nconst iconObj = {\n  left_arrow,\n  right_arrow,\n};\n\nexport const NavButton = ({ label, reverse, onClick, disabled, icon }) => {\n  return (\n    <Button onClick={onClick} disabled={disabled}>\n      {reverse && label}\n      <Icon src={iconObj[icon]} alt={label} reverse={reverse} />\n      {!reverse && label}\n    </Button>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import styled from '@emotion/styled';\n\nexport const PageNavButtonsContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const PageIndexContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px 15px;\n  border: 1px solid #2b86c5;\n  border-radius: 5px;\n  background-color: #ff3cac;\n  background-image: linear-gradient(\n    225deg,\n    #ffc700 0%,\n    #ff7f50 50%,\n    #ff3cac 100%\n  );\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  margin: 15px 20px 15px 0;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-decoration: none;\n  letter-spacing: 1px;\n  opacity: 0.8;\n  min-width: 120px;\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.4;\n  }\n`;\n",
    "import { NavButton } from './NavButton/NavButton';\nimport {\n  PageIndexContainer,\n  PageNavButtonsContainer,\n} from './PageNavButtons.module';\n\nexport const PageNavButtons = ({ page, handlePageChange, totalPages }) => {\n  return (\n    <PageNavButtonsContainer>\n      <NavButton\n        disabled={page === 1}\n        label=\"Prev page\"\n        icon=\"left_arrow\"\n        onClick={() => handlePageChange(page - 1)}\n      ></NavButton>\n      <PageIndexContainer>{page}</PageIndexContainer>\n      <NavButton\n        disabled={totalPages === page}\n        label=\"Next page\"\n        icon=\"right_arrow\"\n        reverse=\"true\"\n        onClick={() => handlePageChange(page + 1)}\n      ></NavButton>\n    </PageNavButtonsContainer>\n  );\n};\n\n///\n///\n///\n///\n///\n",
    "import { useCallback, useEffect, useState } from 'react';\nimport { Form, useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/getMovies';\n\nimport { useError } from '../../Contexts/ErrorContext';\n\nimport FilmsList from 'components/FilmsList/FilmsList';\nimport { PageNavButtons } from 'components/Buttons/PageNavButtons/PageNavButtons';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPagesState, setTotalPagesState] = useState(0);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { handleMinorError, handleWarning } = useError();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    const currentPage = searchParams.get('page') || '1';\n\n    if (!currentQuery) {\n      return;\n    }\n\n    if (!searchParams.has('page')) {\n      setSearchParams({ query: currentQuery, page: currentPage });\n    }\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const moviesByQueryResponse = await getMovieByQuery(\n          currentQuery,\n          currentPage\n        );\n        const { results, total_pages, total_results } = moviesByQueryResponse;\n        if (total_results === 0) {\n          handleWarning('Фильм не найден, пожалуйста введите другое название');\n          return;\n        }\n        setTotalPagesState(total_pages);\n        setMovies(results);\n      } catch (e) {\n        handleMinorError('Failed to fetch movies. Please try again.');\n      }\n    };\n\n    fetchMovieByQuery();\n  }, [searchParams, setSearchParams, handleWarning, handleMinorError]);\n\n  const handlePageChange = useCallback(\n    newPage => {\n      setSearchParams(prevParams => ({\n        ...Object.fromEntries(prevParams),\n        page: newPage.toString(),\n      }));\n    },\n    [setSearchParams]\n  );\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n      {movies.length > 0 && (\n        <PageNavButtons\n          movies={movies}\n          page={Number(searchParams.get('page')) || 1}\n          totalPages={totalPagesState}\n          handlePageChange={handlePageChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\n///\n///\n///\n///\n///\n",
    "import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3373af60a4ee1fe7510a1a61c11380e1';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n  }\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`\n    );\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by query:', error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n  }\n};\n\nexport const getCastMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast movies:', error);\n  }\n};\nexport const getReviewsMovie = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews movie:', error);\n  }\n};\n\n///\n///\n///\n//\n",
    "export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\n///\n//\n//\n"
  ],
  "names": [
    "ListFilms",
    "styled",
    "ItemFilms",
    "FilmListimg",
    "FilmTitle",
    "ImgContainer",
    "FavoriteButton",
    "FavoriteIcon",
    "AddToFavoriteButton",
    "id",
    "useFavorites",
    "isFavorite",
    "addToFavoritesAndUpdate",
    "removeFromFavoritesAndUpdate",
    "useState",
    "isFav",
    "setIsFav",
    "useEffect",
    "onClick",
    "e",
    "stopPropagation",
    "preventDefault",
    "className",
    "viewBox",
    "d",
    "movie",
    "location",
    "original_title",
    "poster_path",
    "state",
    "from",
    "to",
    "src",
    "BASE_POSTER_URL",
    "PLACEHOLDER",
    "alt",
    "movies",
    "onRemoveFavorite",
    "useLocation",
    "map",
    "Button",
    "Icon",
    "props",
    "reverse",
    "iconObj",
    "left_arrow",
    "right_arrow",
    "NavButton",
    "label",
    "disabled",
    "icon",
    "PageNavButtonsContainer",
    "PageIndexContainer",
    "PageNavButtons",
    "page",
    "handlePageChange",
    "totalPages",
    "setMovies",
    "totalPagesState",
    "setTotalPagesState",
    "useSearchParams",
    "searchParams",
    "setSearchParams",
    "useError",
    "handleMinorError",
    "handleWarning",
    "currentQuery",
    "get",
    "currentPage",
    "has",
    "query",
    "fetchMovieByQuery",
    "getMovieByQuery",
    "moviesByQueryResponse",
    "results",
    "total_pages",
    "total_results",
    "useCallback",
    "newPage",
    "prevParams",
    "Object",
    "fromEntries",
    "toString",
    "length",
    "FilmsList",
    "Number",
    "axios",
    "API_KEY",
    "getTrendingMovies",
    "data",
    "console",
    "error",
    "getMovieById",
    "movieId",
    "getCastMovie",
    "cast",
    "getReviewsMovie"
  ],
  "sourceRoot": ""
}
