{"version":3,"file":"static/js/945.53f2f045.chunk.js","mappings":"4TAEaA,EAAaC,EAAAA,EAAAA,GAAH,iGAMVC,EAAWD,EAAAA,EAAAA,GAAH,8T,SC8CrB,EAhDa,WACX,IAAME,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaP,GAFlB,OAERG,EAFQ,OAGdC,EAAQD,GAHM,gDAKdK,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACN,KAGF,gCACSQ,QAAQC,IAAI,mBAAmBX,IAGpC,SAACH,EAAD,UACGQ,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,UAACjB,EAAD,YACE,gBACEkB,IAAG,UACDH,EACII,EAAAA,EAAkBJ,EAClBK,EAAAA,EAAc,SAAWJ,GAE/BK,IAAKL,KAEP,0BACE,sCADF,IACwBA,MAExB,0BACE,yCADF,IAC2BC,OAbdH,EADP,QAsBnB,C,8ECpDM,IAAMK,EAAkB,mCAClBC,EAAc,qC","sources":["components/Cast/Cast.module.jsx","components/Cast/Cast.jsx","utils/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const StyledList = styled.ul`\r\n  margin-top: 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n`;\r\nexport const ListItem = styled.li`\r\n  min-width: 182px;\r\n  font-size: 14px;\r\n  padding: 6px;\r\n  max-width: min-content;\r\n  background-color: #2a2a2a;\r\n  border-radius: 14px;\r\n\r\n  :not(:last-child) {\r\n    margin-bottom: 6px;\r\n  }\r\n\r\n  img {\r\n    max-width: 182px;\r\n    border-radius: 8px;\r\n  }\r\n  span {\r\n    color: #ffc700;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { getCastMovie } from 'services/getMovies';\r\nimport { BASE_POSTER_URL, PLACEHOLDER } from 'utils/constants';\r\nimport { ListItem, StyledList } from './Cast.module';\r\n\r\nconst Cast = () => {\r\n  const location = useLocation()\r\n  const { movieId } = useParams();\r\n\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCast = async () => {\r\n      try {\r\n        const cast = await getCastMovie(movieId);\r\n        setCast(cast);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchCast();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n            {console.log('location in Cast',location)}\r\n\r\n      {\r\n        <StyledList>\r\n          {cast.map(({ id, profile_path, original_name, character }) => (\r\n            <ListItem key={id}>\r\n              <img\r\n                src={`${\r\n                  profile_path\r\n                    ? BASE_POSTER_URL + profile_path\r\n                    : PLACEHOLDER + '?text=' + original_name\r\n                }`}\r\n                alt={original_name}\r\n              />\r\n              <p>\r\n                <span> Actor:</span> {original_name}\r\n              </p>\r\n              <p>\r\n                <span>Character:</span> {character}\r\n              </p>\r\n            </ListItem>\r\n          ))}\r\n        </StyledList>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\r\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\r\n"],"names":["StyledList","styled","ListItem","location","useLocation","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","getCastMovie","console","log","map","id","profile_path","original_name","character","src","BASE_POSTER_URL","PLACEHOLDER","alt"],"sourceRoot":""}